version: "3.7"

services:
  web:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/usr/src/backend/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=base_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hackathon_dev
  bot:
    build:
      context: bot
      dockerfile: Dockerfile
    restart: always
    container_name: 'bot'
    command: ./run.sh
    environment:
      - REDIS_HOST=redis
      - MONGO_HOST=mongodb
      - MONGO_DB=hktn_bot
      - MONGO_PORT=27017
    volumes:
      - .:/app
    ports:
      - 3500:3500
  mongodb:
    image: mongo
    hostname: mongodb
    container_name: 'bot_app_mongodb'
    volumes:
      - ./mongodb/data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=hktn_bot
      - MONGO_INITDB_ROOT_PASSWORD=hktn_bot
      - MONGO_INITDB_DATABASE=hktn_bot
    ports:
      - 27017:27017
  redis:
    hostname: redis
    image: redis
    restart: always
    container_name: 'bot_app_redis'
    ports:
      - 6379

  celery:
    build: ./bot
    restart: always
    container_name: 'bot_app_celery'
    command: celery -A app_celery worker -l info -B
    environment:
      - CELERY_BROKER_URL=amqp://guest@rabbitmq//
      - MONGO_HOST=mongodb
      - MONGO_DB=deagostini
      - MONGO_PORT=27017
    volumes:
      - .:/app
    links:
      - rabbitmq
    depends_on:
      - bot
      - rabbitmq
  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq
    restart: always
    container_name: 'bot_app_rebbitmq'
    ports:
      - 5672:5672
      - 15672:15672
volumes:
  postgres_data:
